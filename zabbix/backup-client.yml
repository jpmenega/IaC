- hosts: active
  become: yes
  tasks:
    - name: Stop urbackupclientbackend
      service:
        name: urbackupclientbackend
        state: stopped

    - name: Disable service urbackupclientbackend
      service:
        name: urbackupclientbackend.service
        enabled: no

    - name: Turn primary node as DRBD primary
      shell: "drbdadm primary zabbix"
      when: lb_primary == "yes"
      with_items: "{{ (lb_primary | default([])) }}"

    - name: Mount DRBD on primary node only
      mount:
        path: /var/lib/mysql
        src: /dev/{{ drbd_zabbix_volume }}
        opts: acl
        fstype: ext4
        state: mounted
      when: lb_primary == "yes"
      with_items: "{{ (lb_primary | default([])) }}"

    - name: Create urbackup folder
      file:
        path: /var/lib/mysql/urbackup/
        state: directory
        mode: '0755'
      when: lb_primary == "yes"
      with_items: "{{ (lb_primary | default([])) }}"

    - name: Move usr-local
      shell: "mv /usr/local/* /var/lib/mysql/urbackup/"
      when: lb_primary == "yes"
      with_items: "{{ (lb_primary | default([])) }}"

    - name: Remove local folder
      shell: "mv /usr/local /usr/local-tag"

    - name: Create a symbolic link
      file:
        src: /var/lib/mysql/urbackup/
        dest: /usr/local
        state: link
        force: yes

    - name: Download pre UrBackup job script
      get_url:
        url: "{{ git_source }}/zabbix/scripts/prefilebackup"
        dest: /usr/local/etc/urbackup/
      when: lb_primary == "yes"
      with_items: "{{ lb_primary | default([]) }}"

    - name: change pre UrBackup job script permission
      file:
        path: /usr/local/etc/urbackup/prefilebackup
        state: touch
        mode: "u+rwx,g-rwx,o-rwx"
      when: lb_primary == "yes"
      with_items: "{{ lb_primary | default([]) }}"

    - name: Download post UrBackup job script
      get_url:
        url: "{{ git_source }}/zabbix/scripts/postfilebackup"
        dest: /usr/local/etc/urbackup/
      when: lb_primary == "yes"
      with_items: "{{ lb_primary | default([]) }}"

    - name: change post UrBackup job script permission
      file:
        path: /usr/local/etc/urbackup/postfilebackup
        state: touch
        mode: "u+rwx,g-rwx,o-rwx"
      when: lb_primary == "yes"
      with_items: "{{ lb_primary | default([]) }}"

    - name: Download crm urbackup script
      shell: "wget {{ git_source }}/zabbix/scripts/urbackup"
      args:
        chdir: /usr/lib/ocf/resource.d/heartbeat
        creates: /usr/lib/ocf/resource.d/heartbeat/urbackup

    - name: change urbackup script permission
      file:
        path: /usr/lib/ocf/resource.d/heartbeat/urbackup
        state: touch
        mode: "u=rwx,g=rx,o=rx"

    - name: "Configure urbackup script - drbd_postgresql_volume"
      replace:
        path: /usr/lib/ocf/resource.d/heartbeat/urbackup
        regexp: '<drbd_zabbix_volume>'
        replace: '{{ drbd_zabbix_volume }}'

    - name: Configure pacemaker service Bkp
      shell: "crm configure primitive zabbixSVCBkp ocf:heartbeat:urbackup op monitor interval=10s timeout=60s op start timeout=30s interval=0 op stop timeout=30s interval=0 meta migration-threshold=10 > lb-servicebkp.txt"
      args:
       chdir: $HOME
       creates: lb-servicebkp.txt
      when: lb_primary == "yes"
      with_items: "{{ lb_primary | default([]) }}"

    - name: Add pacemaker Bkp to group
      shell: "crm configure show grp_mysql | sed 's/$/ zabbixSVCBkp/' | crm configure load update - > lb-groupbkp.txt"
      args:
       chdir: $HOME
       creates: lb-groupbkp.txt
      when: lb_primary == "yes"
      with_items: "{{ (lb_primary | default([])) }}"

    - name: Unmount DRBD
      mount:
        path: /var/lib/mysql
        state: unmounted
      when: lb_primary == "yes"
      with_items: "{{ (lb_primary | default([])) }}"

    - name: Turn primary node back as DRBD secondary
      shell: "drbdadm secondary zabbix"
      when: lb_primary == "yes"
      with_items: "{{ (lb_primary | default([])) }}"
